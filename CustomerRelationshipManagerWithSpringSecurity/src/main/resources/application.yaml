springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs

server:
  servlet:
    context-path: /CustomerRelationshipManager
  port: 8080

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}

spring:
  application:
    name: CustomerRelationshipManager

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:

  profiles:
    active: local # Default active profile

resilience4j:
  circuitbreaker:
    instances:
      trainerHoursCircuitBreaker:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5000
        minimum-number-of-calls: 6
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
  timelimiter:
    instances:
      trainerHoursCircuitBreaker:
        timeout-duration: 2s

#logging:
#  level:
#    org:
#      springframework:
#        DEBUG
---
# Local Profile Configuration
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/CustomerRelationshipManager
    username: ${postgres_user}
    password: ${postgres_password}
    driver-class-name: org.postgresql.Driver

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: false

---
# Development Profile Configuration
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/dev-db
    username: dev_user
    password: dev_password
    driver-class-name: org.postgresql.Driver

management:
  endpoints:
    web:
      exposure:
        include: "health,info"
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: false

---
# Staging Profile Configuration
spring:
  config:
    activate:
      on-profile: stg
  datasource:
    url: jdbc:postgresql://stg-db-server:5432/stg-db
    username: stg_user
    password: stg_password
    driver-class-name: org.postgresql.Driver

management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

---
# Production Profile Configuration
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://prod-db-server:5432/prod-db
    username: prod_user
    password: prod_password
    driver-class-name: org.postgresql.Driver

management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      show-details: never
  prometheus:
    metrics:
      export:
        enabled: true